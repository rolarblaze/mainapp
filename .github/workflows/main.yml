name: Build, Push, and Deploy Next.js App

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest

  deploy:
    name: Deploy to Azure Ubuntu Server using Docker Compose
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Install SSH Client and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass docker-compose

    - name: Checkout Code (again for the deployment)
      uses: actions/checkout@v3

    - name: Deploy Application using Docker Compose
      env:
        SSH_HOST: ${{ secrets.AZURE_SERVER_HOST }}
        SSH_USER: ${{ secrets.AZURE_SERVER_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        # Set up SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # SSH into the server and deploy using Docker Compose
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST << 'EOF'
        cd /path/to/your/app  # Replace with the actual directory on the server
        git pull origin main   # Pull the latest changes from GitHub if needed
        docker-compose pull    # Pull the latest Docker image
        docker-compose down    # Stop and remove existing containers
        docker-compose up -d   # Start updated containers in detached mode
        EOF
